1. What do the .data, .word, .text directives mean (i.e. what do you use them for)?
.data => initialized data for the life of the program
.word => 4 bytes constants (name:	storage_type	value(s))
.text => where the code starts.

2. How do you set a breakpoint in MARS? Set a breakpoint on line 14 and run to it. What is the instruction address? Has line 14 executed yet?
    Execute the program then choose the line where to insert the breakpoint. The instruction address is 0x00400020. Yes line 14 has executed.

3. Once at a breakpoint, how do you continue to execute your code? How do you step through your code? Run the code to completion.
    Step through by untoggling the breakpoint and pressing run.

4.Find the "Run I/O" window. What number did the program output? Which fib number is this?
    34, the 9th number of the fibonacci sequence.

5. At what address is n stored in memory? Try finding this by (1) looking at the Data Segment and (2) looking at the machine code (Code column in the Text Segment).
    0x10010010

6. Without using the "Edit" tab, have the program calculate the 13th fib number by manually modifying this memory location before execution. You may find it helpful to uncheck the "Hexadecimal Values" box at the bottom of the Data Segment.
    Done.

7. How do you view and modify the contents of a register? Reset the simulation (Run-->Reset or F12) and now calculate the 13th fib number by (1) breaking at a well-chosen spot, (2) modifying a single register, and then (3) unsetting the breakpoint.
    Done.

8. Lines 19 and 21 use the syscall instruction. What is it and how do you use it? (Hint: look in Help)
    syscall is a system service, and value 1 = print integer, while value 10 = exit program.
    